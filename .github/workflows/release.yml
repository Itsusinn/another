name: release

on: workflow_dispatch

env:
  CARGO_TERM_COLOR: always

jobs:
  linux-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Resume cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-itsusinn-another-cross-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-itsusinn-another-cross

    - name: Install stable Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true

    - name: Install assimp
      run: |
        sudo apt-get update
        sudo apt-get install libassimp-dev libxcb-shape0-dev libxcb-xfixes0-dev mesa-common-dev libgl1-mesa-dev libsdl2-dev libsdl2-mixer-dev libsdl2-gfx-dev libsdl2-image-dev libsdl2-ttf-dev xorg-dev
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        # use-cross: true
        # see https://github.com/rtbo/rust-xcb/issues/31
        command: build
        # args:  --release --target x86_64-unknown-linux-musl
        args:  --release

    - name: Upload bin
      uses: actions/upload-artifact@v2
      with:
        name: another-amd64-linux
        # path: target/x86_64-unknown-linux-musl/release/another
        path: target/release/another

  macos-build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Resume cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-itsusinn-another-cross-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-itsusinn-another-cross

    - name: Install stable Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true

    - name: Install assimp
      run: brew install assimp

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args:  --release --target x86_64-apple-darwin

    - name: Upload bin
      uses: actions/upload-artifact@v2
      with:
        name: another-amd64-macos
        path: target/x86_64-apple-darwin/release/another

  release:
    name: Release
    needs: [linux-build, macos-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download linux-bin
        uses: actions/download-artifact@v2
        with:
          name: another-amd64-linux
          path: ./packages/amd64-linux
      - name: Download macos-bin
        uses: actions/download-artifact@v2
        with:
          name: another-amd64-macos
          path: ./packages/amd64-macos
      - name: Install zip
        uses: montudor/action-zip@v1
      - name: Move,rename packages
        id: package
        run: |
          cp -r assets ./packages/amd64-linux/
          cp -r assets ./packages/amd64-macos/
          cd packages
          zip -qq -r another-amd64-linux.zip amd64-linux
          zip -qq -r another-amd64-macos.zip amd64-macos
          cd $GITHUB_WORKSPACE
          v1="version"
          v1=`grep -m 1 $v1 Cargo.toml`
          v1=${v1%\"*}
          output=${v1#*\"}
          echo "::set-output name=VERSION::$output"
      - name: Github release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ steps.package.outputs.VERSION }}"
          prerelease: true
          title: "Another ${{ steps.package.outputs.VERSION }}"
          files: |
            packages/*.zip
